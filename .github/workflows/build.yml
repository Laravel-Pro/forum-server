name: Test & Build

on: [push]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        ports:
          - 3306
        env:
          MYSQL_DATABASE: unit_testing
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=6

    steps:
    - uses: actions/checkout@v2
    - name: Copy .env
      run: |
        cp .env.testing.example .env.testing

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate --env=testing

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: mysql
        DB_DATABASE: unit_testing
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
      run: vendor/bin/phpunit

  build-image:
    name: Build Image

    needs: unit-tests

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set Image Tag
        run: |
          IMAGE_NAME="docker.pkg.github.com/laravel-pro/forum-server/pro-server"
          TAG="$(date +%Y%m%d%H%M%S)"
          echo "::set-env name=IMAGE_TAG::$IMAGE_NAME:$TAG"
          echo "::set-env name=IMAGE_TAG_LATEST::$IMAGE_NAME:latest"
      - name: Install Dependencies
        run: composer install -q --no-dev --optimize-autoloader --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Publish Docker
        run: |
          echo ${{ github.token }} | docker login -u ${{ github.actor }} --password-stdin docker.pkg.github.com
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG
          docker tag $IMAGE_TAG $IMAGE_TAG_LATEST
          docker push $IMAGE_TAG_LATEST
      - name: Deploy to dev server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.dev_server_host }}
          username: root
          key: ${{ secrets.dev_server_key }}
          envs: IMAGE_TAG
          script: |
            cd ~/laravel-pro
            sed -i "s#docker.pkg.github.com/laravel-pro/forum-server/pro-server:[0-9]*#$IMAGE_TAG#g" docker-compose.yml
            docker-compose up -d --no-deps pro-server
            docker image prune --all --force --filter "until=72h"

