name: Test & Build

on: [push]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit

  build-image:
    name: Build Image

    needs: unit-tests

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set Image Tag
        run: |
          IMAGE_NAME="docker.pkg.github.com/laravel-pro/forum-server/pro-server"
          TAG="$(date +%Y%m%d%H%M%S)"
          echo "::set-env name=IMAGE_TAG::$IMAGE_NAME:$TAG"
          echo "::set-env name=IMAGE_TAG_LATEST::$IMAGE_NAME:latest"
      - name: Install Dependencies
        run: composer install -q --no-dev --optimize-autoloader --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Publish Docker
        run: |
          echo ${{ github.token }} | docker login -u ${{ github.actor }} --password-stdin docker.pkg.github.com
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG
          docker tag $IMAGE_TAG $IMAGE_TAG_LATEST
          docker push $IMAGE_TAG_LATEST
      - name: Deploy to dev server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.dev_server_host }}
          username: root
          key: ${{ secrets.dev_server_key }}
          envs: IMAGE_TAG
          script: |
            cd ~/laravel-pro
            sed -i "s#docker.pkg.github.com/laravel-pro/forum-server/pro-server:[0-9]*#$IMAGE_TAG#g" docker-compose.yml
            docker-compose up -d --no-deps pro-server
            docker image prune --all --force --filter "until=72h"

